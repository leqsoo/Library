//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mvcbooks.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LibraryEntities2 : DbContext
    {
        public LibraryEntities2()
            : base("name=LibraryEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Author> Authors { get; set; }
        public virtual DbSet<Author_Book> Author_Book { get; set; }
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<Book_Genre> Book_Genre { get; set; }
        public virtual DbSet<Borrowed_Book_By_Client> Borrowed_Book_By_Client { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<Genre> Genres { get; set; }
    
        public virtual ObjectResult<BorowedBookList_Result> BorowedBookList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BorowedBookList_Result>("BorowedBookList");
        }
    
        public virtual ObjectResult<BorrowedAndReternedBooks_Result> BorrowedAndReternedBooks(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BorrowedAndReternedBooks_Result>("BorrowedAndReternedBooks", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<BorrowedBookBetweenDates_Result> BorrowedBookBetweenDates(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BorrowedBookBetweenDates_Result>("BorrowedBookBetweenDates", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<BorrowedBookForNow_Result> BorrowedBookForNow()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BorrowedBookForNow_Result>("BorrowedBookForNow");
        }
    
        public virtual int ReturnBook(Nullable<int> borrowed_Book_By_Client_BookId, Nullable<int> borrowed_Book_By_Client_ClientId, Nullable<System.DateTime> updateReternDAte)
        {
            var borrowed_Book_By_Client_BookIdParameter = borrowed_Book_By_Client_BookId.HasValue ?
                new ObjectParameter("Borrowed_Book_By_Client_BookId", borrowed_Book_By_Client_BookId) :
                new ObjectParameter("Borrowed_Book_By_Client_BookId", typeof(int));
    
            var borrowed_Book_By_Client_ClientIdParameter = borrowed_Book_By_Client_ClientId.HasValue ?
                new ObjectParameter("Borrowed_Book_By_Client_ClientId", borrowed_Book_By_Client_ClientId) :
                new ObjectParameter("Borrowed_Book_By_Client_ClientId", typeof(int));
    
            var updateReternDAteParameter = updateReternDAte.HasValue ?
                new ObjectParameter("UpdateReternDAte", updateReternDAte) :
                new ObjectParameter("UpdateReternDAte", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReturnBook", borrowed_Book_By_Client_BookIdParameter, borrowed_Book_By_Client_ClientIdParameter, updateReternDAteParameter);
        }
    }
}
